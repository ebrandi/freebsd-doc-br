<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>
<!DOCTYPE article PUBLIC "-//FreeBSD//DTD DocBook XML V4.2-Based Extension//EN"
        "../../../share/sgml/freebsd42.dtd" [
<!ENTITY % entities PUBLIC "-//FreeBSD//ENTITIES DocBook FreeBSD Entity Set//PT" "../../share/sgml/entities.ent">
%entities;
<!ENTITY fbus.ap "<application>Servidor de Atualização FreeBSD</application>">
]>

<!--
  The FreeBSD Documentation Project
  The FreeBSD Brazilian Portuguese Documentation Project

  Original revision: r39544
-->


<article lang="pt_br">
  <articleinfo>
    <title>Construa o Seu Proprio Servidor de Atualização &os;</title>

    <author>
      <firstname>Jason</firstname>
      <surname>Helfman</surname>
      <affiliation>
	<address>&a.jgh;</address>
      </affiliation>
    </author>

    <copyright>
      <year>2009</year>
      <year>2010</year>
      <year>2011</year>
      <holder role="mailto:jhelfman@experts-exchange.com">Jason Helfman</holder>
    </copyright>

    <legalnotice id="trademarks" role="trademarks">
      &tm-attrib.freebsd;
      &tm-attrib.general;
      &tm-attrib.intel;
      &tm-attrib.amd;
    </legalnotice>

    <pubdate>$FreeBSD$</pubdate>

    <releaseinfo>$FreeBSD$</releaseinfo>
  </articleinfo>

  <abstract>
    <para>Este artigo descreve como construir um &fbus.ap;.
      O software <ulink
      url="&url.base;/cgi/cvsweb.cgi/projects/freebsd-update-server/">freebsd-update-server</ulink>
      é escrito por &a.cperciva;, atualmente Chefe de Segurança do
      &os;.  Para usuários que acreditam que é conveniente atualizar
      seus sistemas a partir de um servidor oficial de atualização,
      construindo seu próprio &fbus.ap; pode ajudar a estender suas
      funcionalidades por adicionar ajustes manuais às versões
      lançadas do &os; ou por prover uma imagem local que permitirá
      atualizações mais rápidas para suas máquinas</para>
  </abstract>

  <sect1 id="acknowledgments">
    <title>Agradecimentos</title>
      <para>Este artigo foi originalmente publicado em <ulink
	  url="http://www.experts-exchange.com/OS/Unix/BSD/FreeBSD/A_1941-Build-Your-Own-FreeBSD-Update-Server.html">Experts Exchange</ulink>,
	e depois impresso na <ulink
	  url="http://bsdmag.org/magazine/1021-bsd-as-a-desktop">BSD
	  Magazine</ulink>.</para>
  </sect1>

  <sect1 id="introduction">
    <title>Introdução</title>

    <para>Frequentemente usuários ou administradores experiêntes são
    responsáveus por diversas máquinas ou ambientes.  Eles entendem as
    dificuldades e desafios de manter tal estrutura.  Usando um
    &fbus.ap; fica mais fácil de implantar patches de segurança e de
    softwares para máquinas de testes selecionadas antes de implantar
    em produção.  Isto também significa que um número de sistemas
    podem ser atualizados a partir da rede local em vez de usar uma
    conexão de internet potencialmente lenta.  Este artigo descreve as
    etapas envolvidas na criação de um &fbus.ap;.</para>
  </sect1>

  <sect1 id="prerequisites">
    <title>Pré-Requisitos</title>

    <para>Para construir o seu &fbus.ap; alguns requisitos devem ser
    cumpridos.</para>

    <itemizedlist>
      <listitem>
	<para>Um sistema &os; instalado.</para>

	<note>
	  <para>No mínimo, as atualizações precisam ser construidas em
	  uma versão do &os; maior ou igual a versão alvo a ser
	  construida para distruibuição.</para>
	</note>
      </listitem>

      <listitem>
        <para>Uma conta de usuário com no mínimo 4&nbsp;GB de espaço
	livre.  Isto permite a criação de atualizações para as versões
	7.1 e 7.2, mas o espaço exato requerido pode mudar de versão
	para versao.</para>
      </listitem>

      <listitem>
        <para>Uma conta &man.ssh.1; em uma máquina remota para enviar
	as atualizações a serem distribuidas.</para>
      </listitem>

      <listitem>
	<para>Um servidor web, como <ulink
	  url="&url.books.handbook;/network-apache.html">Apache</ulink>,
          com mais da metade do espaço necessário para a construção.
	  Por exemplo, construções testes para 7.1 e 7.2 consomem um
	  espaço total de 4&nbsp;GB, e usam 2.6&nbsp;GB para
	  distribuir essas atualizações.</para>
      </listitem>

      <listitem>
        <para>Conhecimento básico de shell script com o Bourne shell,
	&man.sh.1;</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="Configuration">
    <title>Configuration: Installation &amp; Setup</title>

    <para>Faça o download do software <ulink
	url="&url.base;/cgi/cvsweb.cgi/projects/freebsd-update-server/">freebsd-update-server</ulink>
      no formato <ulink
	url="&url.base;/cgi/cvsweb.cgi/projects/freebsd-update-server/freebsd-update-server.tar.gz?tarball=1">arquivo tar</ulink>,
      ou use &man.csup.1; e o acervo <literal>projects-all</literal>
      .</para>

    <para>Atualize o <filename>scripts/build.conf</filename> de forma adequada.
      Ele é usado durante as operações de construção.</para>

    <para>Aqui está o <filename>build.conf</filename> padrão, que
    deverá ser modificado para se adequar ao seu ambiente.</para>

    <informalexample>
      <programlisting>

# Main configuration file for FreeBSD Update builds.  The
# release-specific configuration data is lower down in
# the scripts tree.

# Location from which to fetch releases
export FTP=ftp://ftp2.freebsd.org/pub/FreeBSD/releases<co id="ftp-id"/>

# Host platform
export HOSTPLATFORM=`uname -m`

# Host name to use inside jails
export BUILDHOSTNAME=${HOSTPLATFORM}-builder.daemonology.net<co id="buildhost-id"/>

# Location of SSH key
export SSHKEY=/root/.ssh/id_dsa<co id="sshkey-id"/>

# SSH account into which files are uploaded
MASTERACCT=builder@wadham.daemonology.net<co id="mstacct-id"/>

# Directory into which files are uploaded
MASTERDIR=update-master.freebsd.org<co id="mstdir-id"/></programlisting>
    </informalexample>

    <para>Paramentros que devem ser considerados:</para>

    <calloutlist>
      <callout arearefs="ftp-id">
        <para>Este é o local de onde serão feito os downloads das
	imagens ISO (pela sub-rotina <function>fetchiso()</function>
	do <filename>scripts/build.subr</filename>).  O local a ser
	configurado não é limitado a URIs de FTP.  Qualquer URI
	suportada pela ferramenta &man.fetch.1; pode ser
	usada.</para>

        <para>Customizações do código da
        <function>fetchiso()</function> pode ser feitas por copiar o
        script padrão <filename>build.subr</filename> para o
        local da sua versão e arquitetura específica
        <filename>scripts/VERSÃO/ARQUITETURA/build.subr</filename> e
        alterando o arquivo.</para>
      </callout>

      <callout arearefs="buildhost-id">
        <para>O nome do computador que fará a construção.  Esta
	informação será exibida durante a atualização dos
	sistemas</para>

        <screen>&prompt.user; <userinput>uname -v</userinput></screen>
      </callout>

      <callout arearefs="sshkey-id">
        <para> A chave <application>SSH</application> para enviar os
	arquivos para o servidor de atualização.  O par de chaves pode
	ser criado digitando <command>ssh-keygen -t dsa</command>.
	Este parametro é opcional; a autenticação por senha será usada
	como método de autenticação quando <literal>SSHKEY</literal>
	não for definida.</para>

        <para>A página do manual &man.ssh-keygen.1; tem informações
	mais detalhadas sobre o <application>SSH</application> e os
	passos apropriados para criar e usar chaves.</para>
      </callout>

      <callout arearefs="mstacct-id">
        <para>Conta para enviar os arquivos para o servidor de
	atualização.</para>
      </callout>

      <callout arearefs="mstdir-id">
        <para>Diretório do servidor de atualização onde os arquivos
	serão enviados.</para>
      </callout>
    </calloutlist>

    <para>O arquivo padrão <filename>build.conf</filename> distribuido
    com o fonte do <application>freebsd-update-server</application>
    está preparado para construir a versão &arch.i386; do &os;.  Como
    um exemplo para construir um servidor de atualização para outras
    arquiteturas, as seguintes modificações são necessárias para a
    arquitetura &arch.amd64;:</para>

    <procedure>
      <step>
	<para>Crie um ambiente de construção para o &arch.amd64;:</para>

	<informalexample>
	  <screen>&prompt.user; <userinput>mkdir -p /usr/local/freebsd-update-server/scripts/7.2-RELEASE/amd64</userinput></screen>
	</informalexample>
      </step>

      <step>
        <para>Copie o arquivo <filename>build.conf</filename> no
	diretório recém criado.  As configurações de construção para o
	&os; 7.2-RELEASE na arquitetura &arch.amd64; devem ser
	similares a:</para>

	<informalexample>
	<programlisting># SHA256 hash of RELEASE disc1.iso image.
export RELH=1ea1f6f652d7c5f5eab7ef9f8edbed50cb664b08ed761850f95f48e86cc71ef5<co id="sha256-id"/>

# Components of the world, source, and kernels
export WORLDPARTS="base catpages dict doc games info manpages proflibs lib32"
export SOURCEPARTS="base bin contrib crypto etc games gnu include krb5  \
                lib libexec release rescue sbin secure share sys tools  \
                ubin usbin cddl"
export KERNELPARTS="generic"

# EOL date
export EOL=1275289200<co id="eol-id"/></programlisting>
	</informalexample>

	<calloutlist>
	  <callout arearefs="sha256-id">
            <para>A chave hash &man.sha256.1; da versão, é publicada no
            url="&url.base;/releases/">anuncio da versão</ulink>.</para>
	  </callout>

	  <callout arearefs="eol-id">
            <para>Para obter o número "End of Life" (Fim da Vida) para o
	    <filename>build.conf</filename>, procure por "Estimated
	    EOL" postado no<ulink
	    url="&url.base;/security/security.html">
	    Site de Segurança do &os;</ulink>.  O valor do
	    <literal>EOL</literal> pode ser obtido a partir da data
	    listada no site, usando a ferramenta &man.date.1;, por
	    exemplo:</para>
            <screen>&prompt.user; <userinput>date -j -f '%Y%m%d-%H%M%S' '20090401-000000' '+%s'</userinput></screen>
	  </callout>
	</calloutlist>
      </step>
    </procedure>
  </sect1>

  <sect1 id="build">
    <title>Construindo a Atualização</title>

    <para>O primeiro passo é executar
    <filename>scripts/make.sh</filename>.  Isto irá construir alguns
    binarários, criar diretórios, e gerar uma chave de assinatura RSA
    usada para aprovar as contruções.  Neste passo, uma senha deverá
    ser fornecida para terminar a criação da chave de
    assinatura.</para>

    <screen>&prompt.root; <userinput>sh scripts/make.sh</userinput>
cc -O2 -fno-strict-aliasing -pipe   findstamps.c  -o findstamps
findstamps.c: In function 'usage':
findstamps.c:45: warning: incompatible implicit declaration of built-in function 'exit'
cc -O2 -fno-strict-aliasing -pipe   unstamp.c  -o unstamp
install findstamps ../bin
install unstamp ../bin
rm -f findstamps unstamp
Generating RSA private key, 4096 bit long modulus
................................................................................++
...................++
e is 65537 (0x10001)

Public key fingerprint:
27ef53e48dc869eea6c3136091cc6ab8589f967559824779e855d58a2294de9e

Encrypting signing key for root
enter aes-256-cbc encryption password:
Verifying - enter aes-256-cbc encryption password:</screen>

    <note>
      <para>Deixe anotado a impressão digital gerada da chave.  Ela é
      necessária no <filename>/etc/freebsd-update.conf</filename> para
      as atualizações de binários.</para>
    </note>

    <para>Neste ponto, nós estamos prontos para a etapa de construção.</para>

    <informalexample>
      <screen>&prompt.root; <userinput>cd /usr/local/freebsd-update-server</userinput>
&prompt.root; <userinput>sh scripts/init.sh <replaceable>amd64 7.2-RELEASE</replaceable></userinput></screen>
    </informalexample>

    <para>A seguir está um exemplo de uma execução <emphasis>inicial</emphasis>.</para>

    <screen>&prompt.root; <userinput>sh scripts/init.sh amd64 7.2-RELEASE</userinput>
Mon Aug 24 16:04:36 PDT 2009 Starting fetch for FreeBSD/amd64 7.2-RELEASE
/usr/local/freebsd-update-server/work/7.2-RELE100% of  588 MB  359 kBps 00m00s
Mon Aug 24 16:32:38 PDT 2009 Verifying disc1 hash for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 16:32:44 PDT 2009 Extracting components for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 16:34:05 PDT 2009 Constructing world+src image for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 16:35:57 PDT 2009 Extracting world+src for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 23:36:24 UTC 2009 Building world for FreeBSD/amd64 7.2-RELEASE
Tue Aug 25 00:31:29 UTC 2009 Distributing world for FreeBSD/amd64 7.2-RELEASE
Tue Aug 25 00:32:36 UTC 2009 Building and distributing kernels for FreeBSD/amd64 7.2-RELEASE
Tue Aug 25 00:44:44 UTC 2009 Constructing world components for FreeBSD/amd64 7.2-RELEASE
Tue Aug 25 00:44:56 UTC 2009 Distributing source for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 17:46:18 PDT 2009 Moving components into staging area for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 17:46:33 PDT 2009 Identifying extra documentation for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 17:47:13 PDT 2009 Extracting extra docs for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 17:47:18 PDT 2009 Indexing release for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 17:50:44 PDT 2009 Indexing world0 for FreeBSD/amd64 7.2-RELEASE

Files built but not released:
Files released but not built:
Files which differ by more than contents:
Files which differ between release and build:
kernel|generic|/GENERIC/hptrr.ko
kernel|generic|/GENERIC/kernel
src|sys|/sys/conf/newvers.sh
world|base|/boot/loader
world|base|/boot/pxeboot
world|base|/etc/mail/freebsd.cf
world|base|/etc/mail/freebsd.submit.cf
world|base|/etc/mail/sendmail.cf
world|base|/etc/mail/submit.cf
world|base|/lib/libcrypto.so.5
world|base|/usr/bin/ntpq
world|base|/usr/lib/libalias.a
world|base|/usr/lib/libalias_cuseeme.a
world|base|/usr/lib/libalias_dummy.a
world|base|/usr/lib/libalias_ftp.a
...</screen>

    <para>Então a construção da base do sistema é feita novamente, com
    os patches.  Uma explicação mais detalhada pode ser encontrada em
    <filename>scripts/build.subr</filename>.</para>

    <warning>
      <para>Durante a segunda construção, o serviço de network time
      protocol, &man.ntpd.8; é desligado. Por &a.cperciva;, atualmente
      Chefe de Segurança do &os;, "O código do
	url="&url.base;/cgi/cvsweb.cgi/projects/freebsd-update-server/">freebsd-update-server</ulink>
	precisa identificar a data e hora que são armazenadas nos
	arquivos de modo que ela pode ser ignorada quando comparando
	versões para determinar quais arquivos precisam ser
	atualizados.  Esta procura por data e hora funciona por fazer
	duas construções 400 dias separados e comparando os
	resultados."</para>
    </warning>

    <screen>Mon Aug 24 17:54:07 PDT 2009 Extracting world+src for FreeBSD/amd64 7.2-RELEASE
Wed Sep 29 00:54:34 UTC 2010 Building world for FreeBSD/amd64 7.2-RELEASE
Wed Sep 29 01:49:42 UTC 2010 Distributing world for FreeBSD/amd64 7.2-RELEASE
Wed Sep 29 01:50:50 UTC 2010 Building and distributing kernels for FreeBSD/amd64 7.2-RELEASE
Wed Sep 29 02:02:56 UTC 2010 Constructing world components for FreeBSD/amd64 7.2-RELEASE
Wed Sep 29 02:03:08 UTC 2010 Distributing source for FreeBSD/amd64 7.2-RELEASE
Tue Sep 28 19:04:31 PDT 2010 Moving components into staging area for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 19:04:46 PDT 2009 Extracting extra docs for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 19:04:51 PDT 2009 Indexing world1 for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 19:08:04 PDT 2009 Locating build stamps for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 19:10:19 PDT 2009 Cleaning staging area for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 19:10:19 PDT 2009 Preparing to copy files into staging area for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 19:10:20 PDT 2009 Copying data files into staging area for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 12:16:57 PDT 2009 Copying metadata files into staging area for FreeBSD/amd64 7.2-RELEASE
Mon Aug 24 12:16:59 PDT 2009 Constructing metadata index and tag for FreeBSD/amd64 7.2-RELEASE

Files found which include build stamps:
kernel|generic|/GENERIC/hptrr.ko
kernel|generic|/GENERIC/kernel
world|base|/boot/loader
world|base|/boot/pxeboot
world|base|/etc/mail/freebsd.cf
world|base|/etc/mail/freebsd.submit.cf
world|base|/etc/mail/sendmail.cf
world|base|/etc/mail/submit.cf
world|base|/lib/libcrypto.so.5
world|base|/usr/bin/ntpq
world|base|/usr/include/osreldate.h
world|base|/usr/lib/libalias.a
world|base|/usr/lib/libalias_cuseeme.a
world|base|/usr/lib/libalias_dummy.a
world|base|/usr/lib/libalias_ftp.a
...</screen>

    <para>Finalmente, a construção termina.</para>

    <screen>Values of build stamps, excluding library archive headers:
v1.2 (Aug 25 2009 00:40:36)
v1.2 (Aug 25 2009 00:38:22)
@(#)FreeBSD 7.2-RELEASE #0: Tue Aug 25 00:38:29 UTC 2009
FreeBSD 7.2-RELEASE #0: Tue Aug 25 00:38:29 UTC 2009
    root@server.myhost.com:/usr/obj/usr/src/sys/GENERIC
7.2-RELEASE
Mon Aug 24 23:55:25 UTC 2009
Mon Aug 24 23:55:25 UTC 2009
##### built by root@server.myhost.com on Tue Aug 25 00:16:15 UTC 2009
##### built by root@server.myhost.com on Tue Aug 25 00:16:15 UTC 2009
##### built by root@server.myhost.com on Tue Aug 25 00:16:15 UTC 2009
##### built by root@server.myhost.com on Tue Aug 25 00:16:15 UTC 2009
Mon Aug 24 23:46:47 UTC 2009
ntpq 4.2.4p5-a Mon Aug 24 23:55:53 UTC 2009 (1)
 * Copyright (c) 1992-2009 The FreeBSD Project.
Mon Aug 24 23:46:47 UTC 2009
Mon Aug 24 23:55:40 UTC 2009
Aug 25 2009
ntpd 4.2.4p5-a Mon Aug 24 23:55:52 UTC 2009 (1)
ntpdate 4.2.4p5-a Mon Aug 24 23:55:53 UTC 2009 (1)
ntpdc 4.2.4p5-a Mon Aug 24 23:55:53 UTC 2009 (1)
Tue Aug 25 00:21:21 UTC 2009
Tue Aug 25 00:21:21 UTC 2009
Tue Aug 25 00:21:21 UTC 2009
Mon Aug 24 23:46:47 UTC 2009

FreeBSD/amd64 7.2-RELEASE initialization build complete.  Please
review the list of build stamps printed above to confirm that
they look sensible, then run
# sh -e approve.sh amd64 7.2-RELEASE
to sign the release.</screen>

    <para>Aprove a construção se tudo estiver correto.  Mais
    informações podem ser encontradas no arquivo do código fonte
    distribuido <filename>USAGE</filename>.  Execute o
    <filename>scripts/approve.sh</filename>.  Isto irá assinar a
    versão, e move-la para uma área preparada para envio.</para>

    <informalexample>
      <screen>&prompt.root; <userinput>cd /usr/local/freebsd-update-server</userinput>
&prompt.root; <userinput>sh scripts/mountkey.sh</userinput></screen>
    </informalexample>

    <screen>&prompt.root; <userinput>sh -e scripts/approve.sh amd64 7.2-RELEASE</userinput>
Wed Aug 26 12:50:06 PDT 2009 Signing build for FreeBSD/amd64 7.2-RELEASE
Wed Aug 26 12:50:06 PDT 2009 Copying files to patch source directories for FreeBSD/amd64 7.2-RELEASE
Wed Aug 26 12:50:06 PDT 2009 Copying files to upload staging area for FreeBSD/amd64 7.2-RELEASE
Wed Aug 26 12:50:07 PDT 2009 Updating databases for FreeBSD/amd64 7.2-RELEASE
Wed Aug 26 12:50:07 PDT 2009 Cleaning staging area for FreeBSD/amd64 7.2-RELEASE</screen>

    <para>Depois que o processo de aprovação é completado, o
    procedimento de envio deve começar.</para>

    <informalexample>
      <screen>&prompt.root; <userinput>cd /usr/local/freebsd-update-server</userinput>
&prompt.root; <userinput>sh scripts/upload.sh <replaceable>amd64 7.2-RELEASE</replaceable></userinput></screen>
    </informalexample>

    <note>
      <para>Caso a versão precise ser re-enviada, isto pode ser feito
      por entrar no diretório público de distribuição para a versão
      desejada e atualizando os atributos do arquivo
      <emphasis>uploaded</emphasis>.</para>

      <informalexample>
	<screen>&prompt.root; <userinput>cd /usr/local/freebsd-update-server/pub/<replaceable>7.2-RELEASE/amd64</replaceable></userinput>
&prompt.root; <userinput>touch -t <replaceable>200801010101.01</replaceable> uploaded</userinput></screen>
      </informalexample>
    </note>

    <!-- If freebsd-update works with other http servers too, we should
	 avoid making the instructions Apache-specific here. -->

<!-- there are specific web instructions in the uploaded code that pertain to Apache. I believe it is worded fine here, now, and if others choose to use another web server, that is their choice to figure out -->
    <para>Os arquivos enviados precisam ficar na raiz do servidor web
    para que as atualizações sejam distribuidas.  A exata configuração
    dependerá do servidor web usado.  Para o servidor web
    <application>Apache</application>, por favor acesse a sessão do
    Handbook 
    <ulink
    url="&url.books.handbook;/network-apache.html">Configuração do
    servidor Apache</ulink>.</para>

    <!-- This note seems either out of place.  I find it hard to read and it
	 is a bit difficult to understand why it is related to the rest of
	 this section.  It looks like something that would fit nicely in an
	 introductory section about the way a freebsd-update server works. -->
    <!-- Agreed, it does not suite very well here.  But it is now included
         above.  I think it can be removed now.  gabor -->
    <!-- Taken out until we decide what to do with it -->

<!-- Agreed. However, I believe the placement of this works fine as it is.
    <note>
      <para>Updates for the current release of the &os; system you are
	updating, and what you want to upgrade <emphasis>to</emphasis> need
	to be built in order for &os; Update Server to work properly.  This
	is necessary for merging of files between releases.  For example, if
	you are updating a system from &os; 7.1 to &os; 7.2, you will need
	to have update code built for &os; 7.1-RELEASE and
	&os; 7.2-RELEASE.</para>
    </note> -->

    <!-- What is a 'KeyPrint'? -->
    <para>Atualize o <literal>KeyPrint</literal> e
      <literal>ServerName</literal> no arquivo
      <filename>/etc/freebsd-update.conf</filename>, e faça as
      atualizações instruidas na sessão do Handbook <ulink
	url="&url.books.handbook;/updating-freebsdupdate.html">Atualização
	do &os;</ulink><para>
      <!-- One sentence, two instances of 'in'.  We can probably reword this
	   part to avoid repetition. -->
      <!-- What about "place client's new keyprint and servername values to
	   freebsd-update.conf, ..."?  gabor -->

<!-- Sorry folks, but I disagree here. I believe it is worded fine. If anything, drop everything after "perform" and change "updates" to "FreeBSD Updates" and link that to the handbook -->

    <important>
      <para>Para o &fbus.ap; funcionar corretamente, atualizações para
      a versão <emphasis>atual</emphasis> e para a versão
      <emphasis>alvo da atualização</emphasis> precisam ser
      construidas.  Isto é necessário para determinar os arquivos que
      diferem entre as versões.  Por exemplo, quando atualizar o &os;
      da versao 7.1-RELEASE para a versão 7.2-RELEASE, as atualizações
      para as duas versões deverão ser construidas e enviadas para o
      seu servidor de atualizações.</para>
    </important>

    <para>Para referencia, a execução completa do <ulink
    url="init.txt"><filename>init.sh</filename></ulink> está
    anexada.</para>
  </sect1>

  <sect1 id="patch">
    <title>Building a Patch</title>

    <para>Every time a <ulink
	url="&url.base;/security/advisories.html">security advisory</ulink>
      or <ulink url="&url.base;/security/notices.html">security notice</ulink>
      is announced, a patch update can be built.</para>

    <para>For this example, 7.1-RELEASE will be used.</para>

    <para>A couple of assumptions are made for a different release
      build:</para>

    <itemizedlist>
      <listitem>
	<para>Setup the correct directory structure for the initial
	  build.</para>
      </listitem>

      <listitem>
	<para>Perform an initial build for 7.1-RELEASE.</para>
      </listitem>
    </itemizedlist>

    <para>Create the patch directory of the respective release
      under <filename
	class="directory">/usr/local/freebsd-update-server/patches/</filename>.</para>

    <informalexample>
      <screen>&prompt.user; <userinput>mkdir -p /usr/local/freebsd-update-server/patches/7.1-RELEASE/</userinput>
&prompt.user; <userinput>cd /usr/local/freebsd-update-server/patches/7.1-RELEASE</userinput></screen>
    </informalexample>

    <para>As an example, take the patch for &man.named.8;.  Read the advisory,
      and grab the necessary file from <ulink
	url="&url.base;/security/advisories.html">&os; Security
	Advisories</ulink>.  More information on interpreting the advisory,
      can be found in the <ulink
	url="&url.books.handbook;/security-advisories.html">&os; Handbook</ulink>.</para>

    <para>In the <ulink
	url="http://security.freebsd.org/advisories/FreeBSD-SA-09:12.bind.asc">security brief</ulink>,
      this advisory is called <literal>SA-09:12.bind</literal>.  After
      downloading the file, it is required to rename the file to an
      appropriate patch level.  It is suggested to keep this consistent with
      official &os; patch levels, but its name may be freely chosen.
      For this build, let us follow the currently established practice of
      &os; and call this <literal>p7</literal>.  Rename the file:</para>

    <informalexample>
      <screen>&prompt.user; <userinput>cd /usr/local/freebsd-update-server/patches/7.1-RELEASE/; mv bind.patch 7-SA-09:12.bind </userinput></screen>
    </informalexample>

    <note>
      <para>When running a patch level build, it is assumed that previous
	patches are in place.  When a patch build is run, it will run all
	patches contained in the patch directory.</para>

      <para>There can be custom patches added to any build.  Use the number
	zero, or any other number.</para>
    </note>

    <warning>
      <para>It is up to the administrator of the &fbus.ap; to take
	appropriate measures to verify the authenticity of every
	patch.</para>
    </warning>

    <para>At this point, a <emphasis>diff</emphasis> is ready to be built.
      The software checks first to see if a
      <filename>scripts/init.sh</filename> has been run on the respective
      release prior to running the diff build.</para>

    <informalexample>
      <screen>&prompt.root; <userinput>cd /usr/local/freebsd-update-server</userinput>
&prompt.root; <userinput>sh scripts/diff.sh <replaceable>amd64 7.1-RELEASE 7</replaceable></userinput></screen>
    </informalexample>

    <para>What follows is a sample of a <emphasis>differential</emphasis>
      build run.</para>

    <screen>&prompt.root; <userinput>sh -e scripts/diff.sh amd64 7.1-RELEASE 7</userinput>
Wed Aug 26 10:09:59 PDT 2009 Extracting world+src for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 17:10:25 UTC 2009 Building world for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 18:05:11 UTC 2009 Distributing world for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 18:06:16 UTC 2009 Building and distributing kernels for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 18:17:50 UTC 2009 Constructing world components for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 18:18:02 UTC 2009 Distributing source for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 11:19:23 PDT 2009 Moving components into staging area for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 11:19:37 PDT 2009 Extracting extra docs for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 11:19:42 PDT 2009 Indexing world0 for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 11:23:02 PDT 2009 Extracting world+src for FreeBSD/amd64 7.1-RELEASE-p7
Thu Sep 30 18:23:29 UTC 2010 Building world for FreeBSD/amd64 7.1-RELEASE-p7
Thu Sep 30 19:18:15 UTC 2010 Distributing world for FreeBSD/amd64 7.1-RELEASE-p7
Thu Sep 30 19:19:18 UTC 2010 Building and distributing kernels for FreeBSD/amd64 7.1-RELEASE-p7
Thu Sep 30 19:30:52 UTC 2010 Constructing world components for FreeBSD/amd64 7.1-RELEASE-p7
Thu Sep 30 19:31:03 UTC 2010 Distributing source for FreeBSD/amd64 7.1-RELEASE-p7
Thu Sep 30 12:32:25 PDT 2010 Moving components into staging area for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 12:32:39 PDT 2009 Extracting extra docs for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 12:32:43 PDT 2009 Indexing world1 for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 12:35:54 PDT 2009 Locating build stamps for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 12:36:58 PDT 2009 Reverting changes due to build stamps for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 12:37:14 PDT 2009 Cleaning staging area for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 12:37:14 PDT 2009 Preparing to copy files into staging area for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 12:37:15 PDT 2009 Copying data files into staging area for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 12:43:23 PDT 2009 Copying metadata files into staging area for FreeBSD/amd64 7.1-RELEASE-p7
Wed Aug 26 12:43:25 PDT 2009 Constructing metadata index and tag for FreeBSD/amd64 7.1-RELEASE-p7
...
Files found which include build stamps:
kernel|generic|/GENERIC/hptrr.ko
kernel|generic|/GENERIC/kernel
world|base|/boot/loader
world|base|/boot/pxeboot
world|base|/etc/mail/freebsd.cf
world|base|/etc/mail/freebsd.submit.cf
world|base|/etc/mail/sendmail.cf
world|base|/etc/mail/submit.cf
world|base|/lib/libcrypto.so.5
world|base|/usr/bin/ntpq
world|base|/usr/include/osreldate.h
world|base|/usr/lib/libalias.a
world|base|/usr/lib/libalias_cuseeme.a
world|base|/usr/lib/libalias_dummy.a
world|base|/usr/lib/libalias_ftp.a
...
Values of build stamps, excluding library archive headers:
v1.2 (Aug 26 2009 18:13:46)
v1.2 (Aug 26 2009 18:11:44)
@(#)FreeBSD 7.1-RELEASE-p7 #0: Wed Aug 26 18:11:50 UTC 2009
FreeBSD 7.1-RELEASE-p7 #0: Wed Aug 26 18:11:50 UTC 2009
    root@server.myhost.com:/usr/obj/usr/src/sys/GENERIC
7.1-RELEASE-p7
Wed Aug 26 17:29:15 UTC 2009
Wed Aug 26 17:29:15 UTC 2009
##### built by root@server.myhost.com on Wed Aug 26 17:49:58 UTC 2009
##### built by root@server.myhost.com on Wed Aug 26 17:49:58 UTC 2009
##### built by root@server.myhost.com on Wed Aug 26 17:49:58 UTC 2009
##### built by root@server.myhost.com on Wed Aug 26 17:49:58 UTC 2009
Wed Aug 26 17:20:39 UTC 2009
ntpq 4.2.4p5-a Wed Aug 26 17:29:42 UTC 2009 (1)
 * Copyright (c) 1992-2009 The FreeBSD Project.
Wed Aug 26 17:20:39 UTC 2009
Wed Aug 26 17:29:30 UTC 2009
Aug 26 2009
ntpd 4.2.4p5-a Wed Aug 26 17:29:41 UTC 2009 (1)
ntpdate 4.2.4p5-a Wed Aug 26 17:29:42 UTC 2009 (1)
ntpdc 4.2.4p5-a Wed Aug 26 17:29:42 UTC 2009 (1)
Wed Aug 26 17:55:02 UTC 2009
Wed Aug 26 17:55:02 UTC 2009
Wed Aug 26 17:55:02 UTC 2009
Wed Aug 26 17:20:39 UTC 2009
...</screen>

    <para>Updates are printed, and approval is requested.</para>

    <screen>New updates:
kernel|generic|/GENERIC/kernel.symbols|f|0|0|0555|0|7c8dc176763f96ced0a57fc04e7c1b8d793f27e006dd13e0b499e1474ac47e10|
kernel|generic|/GENERIC/kernel|f|0|0|0555|0|33197e8cf15bbbac263d17f39c153c9d489348c2c534f7ca1120a1183dec67b1|
kernel|generic|/|d|0|0|0755|0||
src|base|/|d|0|0|0755|0||
src|bin|/|d|0|0|0755|0||
src|cddl|/|d|0|0|0755|0||
src|contrib|/contrib/bind9/bin/named/update.c|f|0|10000|0644|0|4d434abf0983df9bc47435670d307fa882ef4b348ed8ca90928d250f42ea0757|
src|contrib|/contrib/bind9/lib/dns/openssldsa_link.c|f|0|10000|0644|0|c6805c39f3da2a06dd3f163f26c314a4692d4cd9a2d929c0acc88d736324f550|
src|contrib|/contrib/bind9/lib/dns/opensslrsa_link.c|f|0|10000|0644|0|fa0f7417ee9da42cc8d0fd96ad24e7a34125e05b5ae075bd6e3238f1c022a712|
...
FreeBSD/amd64 7.1-RELEASE update build complete.  Please review
the list of build stamps printed above and the list of updated
files to confirm that they look sensible, then run
# sh -e approve.sh amd64 7.1-RELEASE
to sign the build.</screen>

    <para>Follow the same process as noted before for approving a
      build:</para>

    <screen>&prompt.root; <userinput>sh -e scripts/approve.sh amd64 7.1-RELEASE</userinput>
Wed Aug 26 12:50:06 PDT 2009 Signing build for FreeBSD/amd64 7.1-RELEASE
Wed Aug 26 12:50:06 PDT 2009 Copying files to patch source directories for FreeBSD/amd64 7.1-RELEASE
Wed Aug 26 12:50:06 PDT 2009 Copying files to upload staging area for FreeBSD/amd64 7.1-RELEASE
Wed Aug 26 12:50:07 PDT 2009 Updating databases for FreeBSD/amd64 7.1-RELEASE
Wed Aug 26 12:50:07 PDT 2009 Cleaning staging area for FreeBSD/amd64 7.1-RELEASE

The FreeBSD/amd64 7.1-RELEASE update build has been signed and is
ready to be uploaded.  Remember to run
# sh -e umountkey.sh
to unmount the decrypted key once you have finished signing all
the new builds.</screen>

    <para>After approving the build, upload the software:</para>

    <informalexample>
      <screen>&prompt.root; <userinput>cd /usr/local/freebsd-update-server</userinput>
&prompt.root; <userinput>sh scripts/upload.sh <replaceable>amd64 7.1-RELEASE</replaceable></userinput></screen>
    </informalexample>

    <para>For reference, the entire run of
      <ulink url="diff.txt"><filename>diff.sh</filename></ulink> is
      attached.</para>
  </sect1>

  <sect1 id="tips">
    <title>Tips</title>

    <!-- These are nice tips, but there are only a few of them and they need a
	 bit of rewording to make sense.  I'd like to see something that
	 explains at least the following for every tip:

	 * Why is this tip necessary?  What is the original problem it tries
	   to solve?
	 * How to install the changes of the tip, preferably in a <procedure>
	   element, with clearly separated steps.
	 * How to check that the changes of the tip had a measurable and
	   noticeable effect.

	 We can do this in a followup commit.  It doesn't have to be completed
	 *before* we commit this to CVS. -->

<!-- thank you, i just learned these in the process, and thought I would share. They are "tips" and not necessary, so I do see your point, and I would suggest maybe even renaming the section to something more appropriate. Nothing really comes to mind now, though. -->

<!-- this tip will allow you to maintain a custom release and custom kernel, and update it like any other binary update -->
    <itemizedlist>
      <listitem>
	<para>If a custom release is built using the native
	  <command>make release</command> <ulink
	    url="&url.articles.releng;/release-build.html">procedure</ulink>,
	  <application>freebsd-update-server</application> code will work
	  from your release.  As an example, a release without ports or
	  documentation can be built by clearing functionality pertaining
	  to documentation subroutines <function> findextradocs ()</function>,
	  <function>addextradocs ()</function> and altering the download
	  location in <function>fetchiso ()</function>, respectively, in
	  <filename>scripts/build.subr</filename>.  As a last step, change
	  the &man.sha256.1; hash in <filename>build.conf</filename> under
	  your respective release and architecture and you are ready to build
	  off your custom release.</para>

	<screen># Compare ${WORKDIR}/release and ${WORKDIR}/$1, identify which parts
	# of the world|doc subcomponent are missing from the latter, and
	# build a tarball out of them.
	findextradocs () {
	}

	# Add extra docs to ${WORKDIR}/$1
	addextradocs () {
	}
	</screen>
      </listitem>
	<!-- this tip will speed up your build process, however it is not necessary -->
      <listitem>
	<para>Adding <option>-j <replaceable>NUMBER</replaceable></option>
	  flags to <maketarget>buildworld</maketarget> and
	  <maketarget>obj</maketarget> targets in the
	  <filename>scripts/build.subr</filename> script may speed up
	  processing depending on the hardware used, however it is not
	  necessary.  Using these flags in other targets is not
	  recommended, as it may cause the build to become unreliable.</para>

	<screen>               # Build the world
		   log "Building world"
		   cd /usr/src &&
		   make -j 2 ${COMPATFLAGS} buildworld 2>&1

		# Distribute the world
		   log "Distributing world"
		   cd /usr/src/release &&
		   make -j 2 obj &&
		   make ${COMPATFLAGS} release.1 release.2 2>&1</screen>
      </listitem>

      <listitem>
<!-- Parse error.  I don't understand what this paragraph suggests or
     recommends.  Also, why do we need to block RSTs?  I don't really
     like gratuitous blocking of RST, ICMP or other packets.  Our
     kernel can rate-limit most of the "strange" packets alredy. -->

<!-- there is a bug in earlier versions of the software that get the updates, and not blocking them will result in failure to update systems -->

	<para>Create a <ulink
	    url="&url.books.handbook;/firewalls.html">firewall</ulink>
	  rule to block outgoing RST packets.  Due to a bug noted <ulink
	    url="http://lists.freebsd.org/pipermail/freebsd-stable/2009-April/049578.html">in a posting</ulink>
	  on the &a.stable; in April 2009, there may be
	  time-outs and failures when updating a system.</para>
      </listitem>

	<!-- this tip is not necessary, however if you wish to retain mirrors and redundancy, this tip will help you. -->
      <listitem>
	<para>Create an appropriate <ulink
	    url="&url.books.handbook;/network-dns.html">DNS</ulink>
	  SRV record for the update server, and put others behind it with
	  variable weights.  Using this facility will provide update
	  mirrors.</para>

	<screen> _http._tcp.update.myserver.com.                  IN SRV   0 2 80   host1.myserver.com.
							     SRV   0 1 80   host2.myserver.com.
							     SRV   0 0 80   host3.myserver.com.</screen>
      </listitem>
    </itemizedlist>
  </sect1>
</article>
